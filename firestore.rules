rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAdminOrManager() {
      return hasRole('admin') || hasRole('manager');
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || hasRole('admin');
    }
    
    // Onboardings collection
    match /onboardings/{document=**} {
      allow read: if isAuthenticated();
      allow create: if isAdminOrManager();
      allow update: if isAdminOrManager();
      allow delete: if hasRole('admin');
    }
    
    // Documents collection
    match /documents/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Analytics data (read-only for most users)
    match /analytics/{document=**} {
      allow read: if isAuthenticated();
      allow write: if hasRole('admin');
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}